name: deploy-with-flyctl

on:
  push:
    branches:
      - 'main'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifacts
        run: |
          mkdir -p ./instruments

          wget -q -P ./instruments https://maci-develop-fra.s3.eu-central-1.amazonaws.com/6f45848_20230309/ProcessMessages_6-8-2-3_test.wasm
          wget -q -P ./instruments https://maci-develop-fra.s3.eu-central-1.amazonaws.com/6f45848_20230309/TallyVotes_6-2-3_test.wasm
          wget -q -P ./instruments https://maci-develop-fra.s3.eu-central-1.amazonaws.com/6f45848_20230309/ProcessMessages_6-8-2-3_test.0.zkey
          wget -q -P ./instruments https://maci-develop-fra.s3.eu-central-1.amazonaws.com/6f45848_20230309/TallyVotes_6-2-3_test.0.zkey

      - name: Build
        run: make docker-gen VERSION=${{ github.ref_name }}

      - name: Push Docker image
        run: docker push ghcr.io/${{ github.repository }}:${{ github.ref_name }}

# TODO: replace to ECS deployment
  # deploy:
  #   needs: build-and-push-image
  #   name: Deploy
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: superfly/flyctl-actions/setup-flyctl@master
  #     - run: flyctl deploy --remote-only
  #       env:
  #         FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
